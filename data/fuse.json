{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title","getFn":null},{"path":["body"],"id":"body","weight":1,"src":"body","getFn":null}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"Inicio","n":1},"1":{"v":"\nWelcome to my notes space, this site is a collection of disorganized notes related to my work. Feel free to explore, if you find any of this, useful simply copy/paste or share. \n\nHave fun,\n\nIsra.\n\n","n":0.171}}},{"i":2,"$":{"0":{"v":"Mathematics","n":1}}},{"i":3,"$":{"0":{"v":"Volume of the Moduli of Vortices","n":0.408}}},{"i":4,"$":{"0":{"v":"Stats","n":1}}},{"i":5,"$":{"0":{"v":"Stochastic Differential Equations","n":0.577},"1":{"v":"\n# Stochastic processes\n\nLet $(\\Omega, B, P)$ be a measure space, with Borel $\\sigma$-algebra *B*, and probability measure *P*.\n\n**Definition** A *stochastic process* is a parametrized collection of random variables:\n\n$$\\{X_t \\mid t \\geq 0\\},$$\n\nsuch that each $X_t$ is a random variable in the measure space.\n\n## Brownian movement or Wiener process\n\nLet $\\{ w_t \\mid t \\geq 0 \\}$ be a stochastic process such that $w_t$ is continous in the weak sense with respect to $t$. $w_t$ is a *Wiener process* if:\n\n1. $0 \\leq t_1 \\leq t_2$ implies \n$$w_{t_2} - w_{t_1} \\sim N(0, t_2 - t_1)$$\n2. For any $t_1 < t_2 < t_3$, $$w_{t_3} - w_{t_2}$$ is independent of $$w_{t_2} - w_{t_1}$$.\n3. The probability $w_0 = 0$ satisfies $P(w_0 = 0) = 1$.\n\n*Note:* In general, $w_t$ is not differentiable in any point.\n\n## Ito integral\n\nLet $f(t, x_t) = f(t)$, with $x_t$ an stochastic process, such that \n\n$$\\int_a^b E(f(t)) dt < \\infty.$$\n\nWe will say that $f(t)$ is a *random function*. Let \n$$\\{a = t_1 < \\cdots < t_{n + 1} = b\\}$$ \nbe a partition of $[a, b]$, with equally spaced points, and let $\\Delta t = (b - a)/n$ and $$\\Delta w_i = w_{t_{i + 1}} - w_{t_i}$$. Then, Ito's integral is \n\n$$\\int_a^b f(t) dw_t = \\lim\\sum_{i = 1}^n f(t_i) \\Delta w_i.$$\n\n### Notes\n\n- If $s_n$ represents the nth-partial sum of the integral above, we say that $\\lim_{n\\to\\infty} s_n = I$ in probability if \n\n$$\\lim_{n \\to \\infty} E((s_n - I)^2) = 0.$$\n\n- Note that there are two stochastic processes involved in the definition: $x_t$, which is implicit in $f(t)$ and $w_t$, which represents *noise* or *decoherence*, depending the problem.\n\n## Ito's stochastic differential equation\n\n**Definition:** $x_t$ is a solution of the *stochastic differential equation*, \n\n$$dx_t = \\alpha(x_t,t) dt + \\beta(x_t, t)dw_t,$$\n\nif for any $t > 0$, $x_t$ satisfies\n\n$$x_t = x_0 + \\int_0^t \\alpha(x_t, t)dt + \\int_0^t \\beta(x_t, t)dw_t.$$\n\n**Q.** Under which conditions can it be proved that the solution to this equation is unique?.\n\n**Teorem (chain rule)** If $x_t$ is the solution of a stochastic differential equation, and $F(x, t)$ is a real function such that the partial derivatives\n$$\\partial_t F, \\partial_x F, \\partial_{xx} F$$\nare continous functions, then \n\n$$dF(x_t, t) = f(x_t, t) dt + g(x_t, t) dw_t,$$\n\nwhere \n\n$$f(x, t) = \\partial_tF + \\alpha(x_t, t) \\partial_x F + \\frac{1}{2} \\beta^2(x_t, t) \\partial_{xx}F$$\n\nand \n\n$$g(x_t, t) = \\beta(x_t, t) \\partial_x F.$$\n\n### Stochastic maltus model\n\n**Theorem** The solution to the stochastic differential equation\n$$dx_t = r x_t dt + c x_t dw_t$$\nis \n\n$x_t = x_0\\exp((r - c^2/2)t + c \\cdot w_t)$.\n\n**Proof** Let $F = \\ln(x)$, by the chain rule:\n\n$$d\\ln(x_t) = \\left(rx_t\\cdot \\frac{1}{x_t} + \\frac{1}{2} c^2 x_t^2 \\left(- \\frac{1}{x_t^2}\\right)\\right) dt + c x_t \\cdot \\frac{1}{x_t} dw_t,$$\n\nSimplifying the equation, we get\n\n$$d\\ln(x_t) = \\left(r - \\frac{c^2}{2}\\right) dt + c \\cdot dw_t.$$\n\nIt can be shown that the fundamental theorem of calculus is valid for the stochastic integral of a constant function,  therefore, applying this result to the previous equation, we find,\n\n$$\\ln\\left(\\frac{x_t}{x_0}\\right) = \\left(r - \\frac{c^2}{2}\\right) t + c\\cdot w_t,$$\n\nand the theorem follows.\n\n### Numerical methods\n\n#### I. Euler-Murayama method\n\n\n$$dx_i = \\Delta x_i, \\qquad dw_i = \\Delta w_i,$$\n\n$$x_{i + 1} = x_i + \\alpha(x_i, t_i) \\Delta t + \\beta(x_i, t_i) \\Delta w_i.$$\n\nNote that in order to implement this method we should select $\\Delta w_i$ randomly with distribution $N(0, \\Delta t)$.\n\n#### II. Milstein method\n\nModify the last equation into\n\n$$x_{i +1} = x_i + \\alpha(x_i, t_i) \\Delta t + \\beta(x_i, t_i) \\Delta w_i + \\frac{1}{2} \\beta(x_i, t_i) \\frac{\\partial \\beta}{\\partial x}(x_i, t_i) \\left((\\Delta w_i)^2 - \\Delta t\\right).$$\n\nThis last method resembles *predictor-corrector* methods in ordinary differential equations.\n\n---\n\nOriginally published by the author in [http://ixxra.github.io/mathannotations/sdes/2014/05/21/stochastic-differential-equations/](http://ixxra.github.io/mathannotations/sdes/2014/05/21/stochastic-differential-equations/)\n\n\n# References\n\n* Seminar notes, René García-Lara, May 2014, available at [http://ixxra.tumblr.com/post/86507241536/today-in-the-mathematics-seminar-stochastic](http://ixxra.tumblr.com/post/86507241536/today-in-the-mathematics-seminar-stochastic)","n":0.041}}},{"i":6,"$":{"0":{"v":"Sol Manifolds","n":0.707},"1":{"v":"\nSOL is one of the eight Thurston's geometries of three dimensional manifolds. Topologically it is $\\mathbb{R}^3$ with the metric\n$$\nds^2 = e^{-2z}dx^2 + e^{2z}dy^2 + dz^2.\n$$\nIt also is a solvable Lie group, such that the exponential map $\\mathfrak{sol} \\to \\mathrm{SOL}$ is a diffeomorphism and the metric above described is left invariant with respect to the group operation\n$$\n(x,y,z) \\cdot (x',y',z') = (x+ e^z x',y+ e^{-z} y', t + t').\n$$\n\n## Volume entropy\n\nWe aim to compute the volume entropy of the group, defined as\n$$\n\\delta_{\\mathrm{SOL}} = \\lim_{r \\to \\infty} \\frac{1}{r} \\log \\operatorname{Vol}(B(0,r)),\n$$\nwhere $B(0,r)$ is the geodesic ball centred at the origin of radius $r$. For the compuation, we follow Schwartz and notice the projection $\\eta_X: \\mathrm{SOL} \\to \\mathbb{R}^2$, $(x, y, z) \\mapsto (0, y, z)$ decreases areas and sends the geodesic sphere $\\mathcal{S}_r = \\partial B(0, r)$ onto the hyperbolic disk $\\mathbb{D}(0, r) = \\{(y, z) \\in \\mathbb{R}^2 \\mid d(0, (0, y, z)) < r\\}$.\nThe area of the hyperbolic disk is $4\\pi\\sinh(r/2)^2$ and the projection is two-to-one, whence\n$$\n8\\pi\\sinh(r/2)^2 \\leq \\operatorname{Area}(\\mathcal{S}_r).\n$$\nOn the other hand,\n$$\n8\\pi\\sinh(r/2)^2 = 2\\pi(\\cosh(r) - 1),\n$$\nand the volume of the geodesic ball is\n$$\n\\operatorname{Vol}(B_r) = \\int_0^r \\operatorname{Area}(\\mathcal{S}_t) dt,\n$$\nwe conclude,\n$$\n2\\pi (\\sinh(r) - r) \\leq \\operatorname{Vol}(B(0, r)).\n$$\nFrom this inequality, is follows that $1 \\leq \\delta_{\\mathrm{SOL}}$.\n\n### An upper bound for the entropy\n\nThe upper bound for the volume entropy is a work of Schwartz and Kopczynski, their argument is remarkably simple, it comes from the observation that every point $(x, y, z) \\in \\mathcal{S}_r$ satisfies the\ninequalitites,\n$$\n\\begin{align}\n    |x|, |y| \\leq e^r + r, &&\n    |z| \\leq r, &&\n    (|x| - r)(|y| - r) \\leq e^r,\n\\end{align}\n$$\nthen they estimate the upper bound $72r^2e^r$ for $\\operatorname{Vol}(B(0,r))$, by this upper bound, together with the lower bound of the previous section, they conclude that the volume entropy of $\\operatorname{SOL}$ is 1.\n\n## References\n\n* Schwartz, Richard Evan. ‘On Area Growth in Sol’, 2020. <https://doi.org/10.48550/ARXIV.2004.10622>.\n","n":0.058}}},{"i":7,"$":{"0":{"v":"Moment maps","n":0.707},"1":{"v":"\nLet $G$ be a Lie group, a _moment map_ of a symplectic $G$-action on a symplectic manifold $(M, \\omega)$ is a smooth map $\\mu: M \\to \\mathfrak{g}^*$ with the following properties:\n\n1. $\\langle d\\mu(x)v, \\xi \\rangle = \\omega_x(v, \\xi_M(x))$, for all $x \\in M$, $v \\in T_xM$ and $\\xi \\in \\mathfrak{g}$, where $\\xi_M$ is the infinitesimal action. Sometimes this property is written as,\n\n   $$d\\mu^\\xi = -i_{\\xi_M}\\omega.$$\n\n2. $\\mu$ is equivariant with respect to the coadjoint action on $\\mathfrak{g}^*$:\n\n   $$\\mu(gx) = g\\cdot \\mu(x) = Ad^*_{g^{-1}}\\mu(x).$$\n\nA symplectic Lie group action on a symplectic manifold is called a Hamiltonian group action if a moment map µ exists. $(M,\\omega, G, \\mu)$  is called a _Hamiltonian_ $G$-space.\n\n## Holomorphic and Hamiltonian group actions on the sphere\n\nLet $\\rho: U(1) \\times \\widehat{\\mathbb{C}} \\to \\widehat{\\mathbb{C}}$, $(g,z) \\mapsto g.z$ be a group action of the abelian group of unit complex numbers, $U(1)$, on the Riemann sphere. If $\\rho$ is holomorphic, for each $g \\in U(1)$, the map $\\hat{g} = \\rho(g, \\cdot)$ is a Möbius transformation, i.e., $\\hat{g} \\in \\mathrm{PSL}(2,\\mathbb{C})$. Whence, if $g \\neq 1$, $\\hat{g}$ has either one or two fixed points.\n","n":0.075}}},{"i":8,"$":{"0":{"v":"Metric computations on hyperbolic plane","n":0.447}}},{"i":9,"$":{"0":{"v":"General properties of groups of isometries in metric spaces","n":0.333},"1":{"v":"\n## Definitions\n\nLet $G$ be a group of isometries in a metric space $X$, we say that the action of $G$ is proper if the action map\n\n$$\n\\phi: G\\times X \\to X \\times X, \\qquad (g, x) \\mapsto (x, g.x),\n$$\n\nis a proper map (i.e. the preimage $\\phi^{-1}(C)$ of any compact set $C \\subset X \\times X$ is compact). Equivalently, $\\phi$ is proper if and only if, for any compact set $K \\subset X$, the set\n\n$$\n\\left\\{ g \\in G\\mid g(K) \\cap K \\neq \\emptyset \\right\\}\n$$\n\nis compact. For discrete subgroups, this definition is equivalent to requiring that the set @eq-proper-action-equiv is finite, as in the definition of Scott @scott1983 pg. 86.\n\n### Discrete subgroups of isometries\n\nThe following proposition resumes the basic properties of groups of isometries acting on a metric space $X$, the tool for the proof will be [Arzela-Ascoli theorem](https://en.wikipedia.org/wiki/Arzel%C3%A0%E2%80%93Ascoli_theorem). Recall a family of continuous functions $\\mathcal{F}$ is *equicontinuous* if for all $\\epsilon > 0$ exists $\\delta > 0$ such that\n\n$$\nd(x,y) < \\delta \\Rightarrow d(f(x), f(y)) < \\epsilon,\n$$\n\nindependently of the value of $x$ and $y$.\n\n::: {#thm-arzela-ascoli}\nLet $\\mathcal{F} \\subset \\mathcal{C}(X, Y)$ be a family of maps between metric spaces, then $\\mathcal{F}$ is relatively compact in the topology of [compact convergence](https://en.wikipedia.org/wiki/Compact_convergence) (i.e. the topology of uniform convergence on compact sets) if and only if $\\mathcal{F}$ is equicontinuous and $\\mathcal{F}(x)$ is relatively compact in $Y$ for any $x\\in X$.\n:::\n\nNote that families of isometries of the metric space $X$ are trivially equicontinuous,\n\n::: {#prp-1 .prp}\nIf $\\Gamma \\subset X$ is a discrete subgroup of isometries of the complete metric space $(X, d)$ with the Heine-Borel property (each closed bounded set in $X$ is compact), then:\n\n1. The action of $\\Gamma$ is proper.\n2. For any $x \\in X$, the orbit $\\Gamma x$ has no accumulation point in $X$.\n:::\n\nThe source of the proof for the first part can be found [here](https://math.stackexchange.com/questions/3211710/properly-discontinuous-actions-and-discrete-groups-in-complete-riemannian-manifo).\n\n::: proof\nSuppose the existence of a compact set $K\\subset X$ and an infinite sequence of distinct elements $\\gamma_n \\in \\Gamma$ such that $\\gamma_n (K) \\cap K \\neq \\emptyset$. Let $p \\in K$ and $R = 2 \\operatorname{diam}(K)$, then $\\gamma_n(p)$ is contained in the closed ball $\\overline{B}(p, R)$, hence for any $x \\in X$,\n\n$$\n\\begin{align*}\nd(\\gamma_n(x), p) &\\leq d(\\gamma_n(x), \\gamma_n(p)) + d(\\gamma_n(p), p)\\\\\n&= d(x, p) + d(\\gamma_n(p), p) \\\\\n&\\leq d(x, p) + R.\n\\end{align*}\n$$\n\nSince $X$ has the Heine-Borel property, the inequality above implies $\\Gamma x$ is relatively compact for all $x$ and since $\\Gamma$ is a group of isometries, it is also equicontinuous, therefore by the Arzela-Azcoli theorem, $\\Gamma$ is relatively compact in the topology of uniform convergence on compact sets, hence we can suppose there is a continuous function, in fact an isometry, $\\gamma: X \\to X$, such that $\\gamma_n \\to \\gamma$ uniformly on compact sets, hence $\\gamma_n^{-1}\\gamma_{n+1} \\to e$, uniformly on compact sets, but since the topology of $\\Gamma$ is discrete, $\\gamma_n = \\gamma_{n+1}$ for $n$ sufficiently large, a contradiction.\n\nFor the second part assume towards a contradiction the existence of a limit point $y$ for the orbit $\\Gamma x$, hence there is an infinite sequence $\\{\\gamma_n\\} \\subset \\Gamma$ such that $\\gamma_n x \\to y$. If $K$ is the compact set $\\{x\\} \\cup \\{\\gamma_n x\\} \\cup \\{y\\}$, then $\\gamma_n(K)\\cap K \\neq 0$ for all $\\gamma_n$ in the sequence, a contradiction.\n:::\n\nIn particular, complete Riemannian manifolds have the Heine-Borel property and therefore discrete subgroups of isometries act properly.\n\n## Critical exponent of groups of isometries\n\nLet $\\Gamma$ be a discrete subgroup of isometries of the complete metric space $X$ with the Heine-Borel property and let $x, y \\in X$ be any pair of points, we can form the Poincare series of the group, defined as,\n\n$$\nP(s; x, y) = \\sum_{\\gamma \\in \\Gamma} e^{-s d(x, \\gamma y)}, \\qquad s \\in \\mathbb{R}.\n$$\n\nThe *critical exponent* of the group is the number $\\delta_\\Gamma$ such that the series is convergent for $s > \\delta_\\Gamma$. It can be shown that $\\delta_\\Gamma$ is independent of the pair of points chosen in $X$, in fact, it is well known that\n\n$$\n\\delta_\\Gamma = \\limsup_{R \\to \\infty} \\frac{\\log (\\#\\{\\gamma \\in \\Gamma \\mid \\gamma x \\in B(x, R)\\})}{R}.\n$$\n\nIf $X$ is also endowed with a measure $m$, we can define the *volume entropy* of $X$ as,\n\n$$\n\\delta_X = \\limsup_{R \\to \\infty} \\frac{\\log m(B(x,R))}{R}.\n$$\n\nThe following facts are well known for manifolds of negative curvature, however they are valid for more general metric spaces.\n\n::: prp-deltag-deltax\nLet $X$ be a complete metric space with the Heine-Borel property equipped with a measure $m$ compatible with the metric, in the sense that for any measurable set $A \\subset X$ and any isometry $f$, we have $m(f(A)) = m(A)$. If $\\Gamma$ is a discrete group of isometries, then\n\n$$\n\\delta_\\Gamma \\leq \\delta_X,\n$$\n\nmoreover, if $\\Gamma$ is co-compact (the quotient space $\\Gamma \\setminus X$ is compact), then $\\delta_\\Gamma = \\delta_X$.\n:::\n\nThe following proof can be found in @quint.\n\n::: proof\nSince $\\Gamma$ is discrete and $X$ has the Heine-Borel property, the action of $\\Gamma$ is proper, hence no orbit $\\Gamma x$ has accumulation points, therefore there exists a real number $s > 0$ such that for every\\\n$\\gamma \\in \\Gamma$, if $B(\\gamma x, s) \\cap B(x, s) \\neq \\emptyset$ then $\\gamma x = x$. Let $n$ be the number of elements of $\\Gamma$ that fix $x$, by the triangle inequality,\n\n$$\n\\#\\{\\gamma \\in \\Gamma \\mid \\gamma x \\in B(x, r)\\} m(B(x,r)) \\leq n m(B(x, r+s)),\n$$\n\ntaking logarithms, Quint deduces $\\delta_\\Gamma \\leq \\delta_X$. If $\\Gamma$ is co-compact, there is a compact fundamental region $F \\subset X$ such that $\\Gamma(F) = X$. If $s > 0$ is sufficiently large for $F \\subset B(x, s)$, then $X = \\cup_{\\gamma \\in \\Gamma}B(\\gamma x, s)$, since each $\\gamma$ is an isometry and $\\gamma (B(x, s)) = B(\\gamma x, s)$. Thus for any $r > 0$, the triangle inequality implies\n\n$$\nB(x,r) \\subset \\cup_{\\{\\gamma \\in \\Gamma \\mid\\gamma x\\in B(x, r+s)\\}} B(\\gamma x, s),\n$$\n\nhence,\n\n$$\nm(B(x, r)) \\leq \\#\\{\\gamma \\in \\Gamma \\mid \\gamma x \\in B(x, r+s)\\} m(B(x, s)),\n$$\n\nwhere we have used that the measure is compatible with the metric. Taking logs, the last inequality implies $\\delta_X \\leq \\delta_\\Gamma$.\n:::\n\n## The visual boundary in a metric space\n\nLet $(X, d)$ be a complete metric space, a geodesic in $X$ is a continuous function $\\gamma: \\mathbb{R} \\to X$ such that\n\n$$\nd(\\gamma(s), \\gamma(t)) = |s - t|.\n$$\n\nGiven any two geodesics $\\gamma_1, \\gamma_2$, we define the equivalence relation $\\gamma_1 \\sim \\gamma_2$ if and only if there is a constant $c > 0$, such that $d(\\gamma_1(t), \\gamma_2(t)) \\leq c$ for all $t \\geq 0$. We denote the set of equivalence classes as $X(\\infty)$ and call it the *visual boundary* of $X$. Let $\\overline{X} = X \\cup X(\\infty)$, we call $\\overline{X}$ the completion of $X$, if $\\xi \\in X(\\infty)$ and $\\gamma$ is a geodesic in the equivalence class, we also denote $\\xi$ as $\\gamma(\\infty)$ and call $\\xi$ the end of $\\gamma$. Let us introduce a topology on $\\overline{X}$ in the following manner: Let $p \\in X$, $\\xi \\in X(\\infty)$, $\\Theta \\in \\mathbb{R}$, and assume there is a geodesic $\\gamma$ such that $\\gamma(0) = p$ and $\\gamma(\\infty) = \\xi$, we define the cone set\n\n$$\nC(p, \\xi, \\Theta) = \\{x \\in \\overline{X} \\mid \\angle_p(x, \\xi) < \\Theta\\}.\n$$\n\n### References\n\n1. Quint, J.-F. n.d. “An Overview of Patterson-Sullivan Theory.”\n2. Scott, Peter. 1983. “The Geometries of 3-Manifolds.” Bulletin of the London Mathematical Society 15 (5): 401–87. <https://doi.org/10.1112/blms/15.5.401>.\n","n":0.029}}},{"i":10,"$":{"0":{"v":"Gauss Lemma","n":0.707},"1":{"v":"\nThe crux of the proof that geodesics are locally minimizing is the following deceptively simple geometric lemma.\n\n**Theorem 6.9 (The Gauss Lemma).** Let $(M, g)$ be a Riemannian manifold, let \n$U$ be a geodesic ball centered at $p \\in M$, and let $\\partial_{r}$ denote the radial vector field on $U\\setminus \\{p\\}$. Then $\\partial_{r}$ is a unit vector field orthogonal to the geodesic spheres in $U\\setminus \\{p\\}$. \n\nFor the proof, see [[#^2jt9t3lzefrk]].\n\n## References\n\n1. Lee, John M. Introduction to Riemannian Manifolds. Vol. 176. Graduate Texts in Mathematics. Cham: Springer International Publishing, 2018. https://doi.org/10.1007/978-3-319-91755-9.  ^2jt9t3lzefrk\n","n":0.105}}},{"i":11,"$":{"0":{"v":"Conformal metrics on the complex plane","n":0.408},"1":{"v":"\nLet $M$ be a Riemannian manifold with metric $g$, recall the Laplace-Beltrami operator of the metric is the elliptic operator defined as\n$$\n\\Delta_g f = \\frac{1}{\\sqrt{|g|}} \\partial_i \\left( \\sqrt{|g|} g^{ij} \\partial_j f\\right).\n$$\nIn the previous equation we use the Einstein convention of summing over repeated indexes in covariant and contravariant position. If the manifold is an open region in the complex plane, the Theorem of Liouville asserts that there exists a positive function $\\lambda$, such that under a suitable change of coordinates,  $g = \\lambda^2 dz d\\bar{z}$, the curvature of this metric can be computed as\n$$\n\\kappa = - \\Delta_g \\log(\\lambda) = -\\frac{1}{\\lambda^2} \\Delta \\log (\\lambda),\n$$\nwhere $\\Delta_g$ is the Laplace-Beltrami operator of the metric and  $\\Delta = 4 \\partial_z\\bar{\\partial_z} = \\partial^2_x + \\partial^2_y$ is the flat Laplacian.  \n","n":0.089}}},{"i":12,"$":{"0":{"v":"Coding tips","n":0.707},"1":{"v":"\n## Customize Latex Workshop external viewer\n\nIn Vscode the following configuration works well with Latex workshop.\n\n\n### Sumatra\n\n```json\n{\n    \"latex-workshop.view.pdf.viewer\": \"external\",\n    \"latex-workshop.view.pdf.external.viewer.command\": \"C:\\\\Program Files\\\\SumatraPDF\\\\SumatraPDF.exe\",\n    \"latex-workshop.view.pdf.external.viewer.args\": [\n        \"%PDF%\"\n    ],\n    \"latex-workshop.view.pdf.external.synctex\": \"sumatrapdf\",\n    \"latex-workshop.view.pdf.external.synctex.args\": [\n    \"-forward-search\",\n    \"%TEX%\",\n    \"%LINE%\",\n    \"-reuse-instance\",\n    \"-inverse-search\",\n    \"\\\"C:\\\\Users\\\\<Username>\\\\AppData\\\\Local\\\\Programs\\\\Microsoft VS Code\\\\Code.exe\\\" \\\"C:\\\\Users\\\\<U>\\\\AppData\\\\Local\\\\Programs\\\\Microsoft VS Code\\\\resources\\\\app\\\\out\\\\cli.js\\\" --ms-enable-electron-run-as-node -r -g \\\"%f:%l\\\"\",\n    \"%PDF%\"\n  ]\n}\n```\n\n### Sioyek\n\n```json\n{\n    \"latex-workshop.view.pdf.external.viewer.command\": \"C:\\\\path\\\\to\\\\sioyek\\\\sioyek.exe\",\n    \"latex-workshop.view.pdf.external.synctex.command\": \"C:\\\\path\\\\to\\\\sioyek\\\\sioyek.exe\",\n    \"latex-workshop.view.pdf.external.synctex.args\": [\n        \"--inverse-search\",\n        \"\\\"C:\\\\path\\\\to\\\\vscode\\\\Code.exe\\\" \\\"C:\\\\path\\\\to\\\\vscode\\\\resources\\\\app\\\\out\\\\cli.js\\\" --ms-enable-electron-run-as-node -r -g \\\"%1:%2\\\"\",\n        \"--reuse-instance\",\n        \"--forward-search-file\",\n        \"%TEX%\",\n        \"--forward-search-line\",\n        \"%LINE%\",\n        \"%PDF%\"\n    ]\n}\n```\n\n## Biblatex bibliography trick\n\nTo change the `url` biblatex entry string from _retrieved from_ to _available at_, do this:\n\n```latex\n\\DefineBibliographyStrings{english}{%\n   retrieved = {available},\n   from = {at},\n}\n```\n\n## Create a new sveltekit project\n\n```bash\npnpm dlx sv create my-app\ncd my-app\ngit init && git add -A # (optional)\npnpm run dev\n```\n\n## How to install strapi\n\n```bash\npnpm dlx create-strapi-app@latest\n```\n\nSee [strapi.io](https://strapi.io) for details.\n\n## Clone only the latest commit of a Git repository\n\n```bash\ngit clone --depth 1 <url>\n```\n\nIf you need an specific commit, you can obtain it with the `git checkout`\ncommand:\n\n```bash\ngit checkout <commit_hash>\n```\n\n## Source\n\n1. Bing AI Chat, 21/9/2023.\n2. [Copie un repositorio de git sin historial - QA Stack.](https://qastack.mx/programming/29368837/copy-a-git-repo-without-history)\n3. [Clonar repositorio remoto de git hasta cierto commit.](https://es.stackoverflow.com/questions/91014/clonar-repositorio-remoto-de-git-hasta-cierto-commit)\n4. [Regresar un repositorio a un commit especifico - Stack Overflow.](https://es.stackoverflow.com/questions/1458/regresar-un-repositorio-a-un-commit-especifico)\n5. [Atlassian Git Tutorial.](https://www.atlassian.com/es/git/tutorials/setting-up-a-repository/git-clone)\n\n# Edit Git Remote URL\n\n```bash\ngit remote set-url origin <new-url>\n\n```\n\n[Source](https://chat.openai.com/share/5bbfc058-d6be-4ec8-b03f-be8df3619c37)\n\n# Django tests not running\n\n__Solution.__ Make sure you are writing your tests wrapped in classes that inherit from `TestCase`. Example:\n\n```python\nfrom django.test import TestCase\n\n\nclass FooTest(TestCase):\n    def setUp(self):\n        pass\n\n    def tearDown(self):\n        pass\n\n    def test_this_will(self):\n        print 'Win'\n```\n\n[Read more](https://stackoverflow.com/questions/2037364/django-test-runner-not-finding-tests)\n","n":0.067}}},{"i":13,"$":{"0":{"v":"Code Snippets","n":0.707},"1":{"v":"\n# Creating secret keys from the command line\n\nWithin linux\n\n```sh\nopenssl rand -base64 32\n```\n\nWith python\n\n```python\nimport secrets\nsecrets.token_hex(24)\n```\n\n# How to set gnome wallpaper using the command line\n\n```sh\ngsettings set org.gnome.desktop.background picture-uri file:///path/to/image\n```\n\n## Setting bing's image of the day as wallpaper\n\n```sh\nwget -O /tmp/wallpaper.jpg \"http://www.bing.com/$(wget -q -O- https://binged.it/2ZButYc | sed -e 's/<[^>]*>//g' | cut -d / -f2 | cut -d \\& -f1)\"\n\ngsettings set org.gnome.desktop.background picture-uri file:////tmp/wallpaper.jpg\n\n```\n\n__Source:__ [https://linuxconfig.org/set-wallpaper-on-ubuntu-20-04-using-command-line](https://linuxconfig.org/set-wallpaper-on-ubuntu-20-04-using-command-line)\n","n":0.129}}},{"i":14,"$":{"0":{"v":"Ruby","n":1},"1":{"v":"\n[Difference between exec, system and backticks?](https://ixxra.tumblr.com/post/719941506244476928/ruby-difference-between-exec-system-and-x-or)","n":0.408}}},{"i":15,"$":{"0":{"v":"Coding tips for the R programming language","n":0.378},"1":{"v":"\n# Where to find help\n\nStart here: https://rdrr.io/\n\n# Load R script into session\n\nTo load the contents of an R script, you can use the `source()` function¹. This function reads the specified R script file and runs the code contained within it. For example, if you have an R script named `my_script.R` in your working directory, you can load its contents by running the following command in the R console: `source(\"my_script.R\")`¹. This will execute all of the code contained within the `my_script.R` file¹.\n\n\n**Source:** [Conversation with Bing](https://sl.bing.net/f9X2XdJtdJc), 19/8/2023\n\n## References\n\n* (1) Run R script from command line - Stack Overflow. https://stackoverflow.com/questions/18306362/run-r-script-from-command-line.\n* (2) load function - RDocumentation. https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/load.\n","n":0.099}}},{"i":16,"$":{"0":{"v":"Python","n":1},"1":{"v":"\n## Methods to Convert XML to JSON\n\n```python\nimport xmltodict\nimport json\nimport os\n\n# Directorio con tus archivos XML\ndirectorio = 'ruta/a/tus/facturas'\n\n# Procesar cada archivo XML\nfor archivo in os.listdir(directorio):\n    if archivo.endswith('.xml'):\n        with open(os.path.join(directorio, archivo), 'r') as xml_file:\n            xml_content = xml_file.read()\n            datos_json = xmltodict.parse(xml_content)\n            \n            # Guardar como archivo JSON\n            with open(archivo.replace('.xml', '.json'), 'w') as json_file:\n                json.dump(datos_json, json_file, indent=4)\n\n```\n","n":0.137}}},{"i":17,"$":{"0":{"v":"URL to title","n":0.577},"1":{"v":"\nSimple program that reads an url and prints the last part of the path as a title. \n\n<script src=\"https://gist.github.com/renegarcia/9e80f1c84c57753b5aa4e19f0b8198db.js\"></script>\n\n# Code \n\n```python\nfrom urllib.parse import urlparse\n\ndef get_last_path(url:str) -> str:\n    # Parse the URL\n    parsed_url = urlparse(url)\n\n    # Get the path from the parsed URL\n    path = parsed_url.path\n\n    # Split the path by slashes and get the last part\n    path_parts = path.split('/')\n    last_part = path_parts[-1]\n\n    return last_part\n\ndef path_to_title(path:str) -> str:\n    return path.replace(\"-\", \" \").title()\n\ndef main():\n    url = input(\"Enter the URL: \")\n    path = get_last_path(url)\n    title = path_to_title(path)\n    print(title)\n\nif __name__ == \"__main__\":\n    while True:\n        try:\n            main()\n        except KeyboardInterrupt:\n            break\n```\n\n# Case of use\n\nI use this to format references in my mardown documents. For example, given the url \n\n``` \nhttps://stackoverflow.com/questions/76392847/flutter-firebase-to-python-firebase\n```\n\nThe program outputs\n\n```\nFlutter Firebas To Python Firebase\n```\n\nwhich I use to link to the question, like so:\n\n```markdown\n[Flutter Firebas To Python Firebase](https://stackoverflow.com/questions/76392847/flutter-firebase-to-python-firebase)\n```\n\n# References\n\n* [Gist version](https://gist.github.com/renegarcia/9e80f1c84c57753b5aa4e19f0b8198db)\n* [Interactive version in a jupyter notebook](https://colab.research.google.com/drive/1MhXnLZnS7I_oaRjYExcg63TND32YDcHL?usp=sharing)","n":0.084}}},{"i":18,"$":{"0":{"v":"Testing","n":1},"1":{"v":"\n\n# Create named temporary file\n\n```python\nimport tempfile\n\ndef create_temp_file(prefix):\n    temp_file = tempfile.NamedTemporaryFile(prefix=prefix, delete=False)\n    temp_file.close()\n    return temp_file.name\n\n# Example usage\nprefix = \"my_prefix\"\ntemp_file_path = create_temp_file(prefix)\nprint(\"Temporary file created:\", temp_file_path)\n```\n\nFrom the above code, note that the file path can be retrived with `temp_file.name`.\n\n## Access the file directory\n\n\n```python\nfrom pathlib import Path \n\ntemp_file = create_temp_file(\"my_prefix\")\npath = Path(temp_file)\nprint(path.parent)\n```\n\n\n# References\n\n1. [Source](https://chat.openai.com/share/abe75dba-545e-4e17-83db-b59d60ed8c98)","n":0.141}}},{"i":19,"$":{"0":{"v":"Remove punctuation symbols from string","n":0.447},"1":{"v":"\n# The problem\n\nOften a string with special characters like `\"this \\\"string\\\"\"` shall be used as input of another program \nwith all the special characters removed. A case of use could be for example if the input string is to be used as \na filename in another program. \n\n# The solution\n\nWe create a translation table that maps any punctuation symbol into `None`. Punctuation symbols in python are defined in the module `string`.\n\n\n```python\nimport string\n\ndef remove_special_characters(input_string):\n    # Create a translation table mapping special characters to None\n    translation_table = str.maketrans(\"\", \"\", string.punctuation)\n\n    # Remove special characters using the translation table\n    cleaned_string = input_string.translate(translation_table)\n\n    return cleaned_string\n\n# Example usage\ninput_string = 'Hello! \"How are you?\"'\ncleaned_string = remove_special_characters(input_string)\nprint(cleaned_string)\n```\n\n# References\n\n1. [https://chat.openai.com/share/b634b9a2-42f9-4293-8626-1406122dab7a](https://chat.openai.com/share/b634b9a2-42f9-4293-8626-1406122dab7a)\n\n2. [String module](https://docs.python.org/3/library/string.html)","n":0.094}}},{"i":20,"$":{"0":{"v":"Como extraer metadatos del volcado de una base de datos","n":0.316},"1":{"v":"\n## Resultado\n\n[Consultar](https://renegarcia.github.io/eleventa-db/) la base de datos Eleventa.\n\n## Código\n\n\nPrimero instalamos el paquete `sqlparse`. Desde `pypy`:\n\n```shell\npip install sqlparse\n```\n\nSi utlizamos `poetry`:\n\n```shell\npoetry add sqlparse\n```\n\nUna vez instalado, en una sesión de `python` lo podemos importar de la manera usual\n\n\n```python\nfrom typing import Optional\nfrom sqlparse.sql import Statement\nfrom sqlparse.tokens import Keyword\nfrom dataclasses import dataclass\nimport sqlparse\n```\n\n## Extrayendo el nombre de una definición de tabla \n\nVamos a utilizar el siguiente ejemplo de `SQL` para aprender a extraer la información que necesitamos\n\n\n```python\nTABLE = \"\"\"CREATE TABLE IF NOT EXISTS MY_TABLE (ID TLLAVE NOT NULL,\n    CONSTRAINT PK_MY_TABLE PRIMARY KEY (ID));\n\"\"\"\n```\n\n\n```python\nparsed = sqlparse.parse(TABLE) # Devuelve una tupla de statements sql contenidos en la cadena\nstatement = parsed[0]\n```\n\n\n```python\nprint(statement)\n```\n\n    CREATE TABLE IF NOT EXISTS MY_TABLE (ID TLLAVE NOT NULL,\n        CONSTRAINT PK_MY_TABLE PRIMARY KEY (ID));\n\n\n`statement` es una variable tipo `Statement` que puede ser iterada por medio de índices o ciclos.\n\n\n```python\ntoken = statement[0]\nprint(type(statement), type(token))\n```\n\n    <class 'sqlparse.sql.Statement'> <class 'sqlparse.sql.Token'>\n\n\nCada token define dos atributos: `value` y `ttype`, sin embargo el parser es flojo, al invocarlo evitará escanear recursivamente la cadena como se puede ver en los siguientes ejemplos.\n\n\n```python\n# En este caso, el primer token tiene un valor definido y un tipo.\ntoken.value, token.ttype\n```\n\n\n\n\n    ('CREATE', Token.Keyword.DDL)\n\n\n\n\n```python\n# En este ciclo se puede ver que los tokens 11 y 13 no fueron analizados por el parser.\nfor i, token in enumerate(statement):\n    token_type = repr(token.ttype)\n    print(f\"{i+1:2d}. {token.value:50} {token_type:50} {type(token)}\")\n\n```\n\n     1. CREATE                                             Token.Keyword.DDL                                  <class 'sqlparse.sql.Token'>\n     2.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n     3. TABLE                                              Token.Keyword                                      <class 'sqlparse.sql.Token'>\n     4.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n     5. IF                                                 Token.Keyword                                      <class 'sqlparse.sql.Token'>\n     6.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n     7. NOT                                                Token.Keyword                                      <class 'sqlparse.sql.Token'>\n     8.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n     9. EXISTS                                             Token.Keyword                                      <class 'sqlparse.sql.Token'>\n    10.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n    11. MY_TABLE                                           None                                               <class 'sqlparse.sql.Identifier'>\n    12.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n    13. (ID TLLAVE NOT NULL,\n        CONSTRAINT PK_MY_TABLE PRIMARY KEY (ID)) None                                               <class 'sqlparse.sql.Parenthesis'>\n    14. ;                                                  Token.Punctuation                                  <class 'sqlparse.sql.Token'>\n\n\nEl método `Statement.flatten` realizará el parseo de la cadena completa, devolviendo los tipos y valores de cada token encontrado.\n\n\n```python\nfor i, token in enumerate(statement.flatten()):\n    token_type = repr(token.ttype)\n    print(f\"{i+1:2d}. {token.value:50} {token_type:50} {type(token)}\")\n```\n\n     1. CREATE                                             Token.Keyword.DDL                                  <class 'sqlparse.sql.Token'>\n     2.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n     3. TABLE                                              Token.Keyword                                      <class 'sqlparse.sql.Token'>\n     4.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n     5. IF                                                 Token.Keyword                                      <class 'sqlparse.sql.Token'>\n     6.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n     7. NOT                                                Token.Keyword                                      <class 'sqlparse.sql.Token'>\n     8.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n     9. EXISTS                                             Token.Keyword                                      <class 'sqlparse.sql.Token'>\n    10.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n    11. MY_TABLE                                           Token.Name                                         <class 'sqlparse.sql.Token'>\n    12.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n    13. (                                                  Token.Punctuation                                  <class 'sqlparse.sql.Token'>\n    14. ID                                                 Token.Name                                         <class 'sqlparse.sql.Token'>\n    15.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n    16. TLLAVE                                             Token.Name                                         <class 'sqlparse.sql.Token'>\n    17.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n    18. NOT NULL                                           Token.Keyword                                      <class 'sqlparse.sql.Token'>\n    19. ,                                                  Token.Punctuation                                  <class 'sqlparse.sql.Token'>\n    20. \n                                                      Token.Text.Whitespace.Newline                      <class 'sqlparse.sql.Token'>\n    21.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n    22.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n    23.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n    24.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n    25. CONSTRAINT                                         Token.Keyword                                      <class 'sqlparse.sql.Token'>\n    26.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n    27. PK_MY_TABLE                                        Token.Name                                         <class 'sqlparse.sql.Token'>\n    28.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n    29. PRIMARY                                            Token.Keyword                                      <class 'sqlparse.sql.Token'>\n    30.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n    31. KEY                                                Token.Keyword                                      <class 'sqlparse.sql.Token'>\n    32.                                                    Token.Text.Whitespace                              <class 'sqlparse.sql.Token'>\n    33. (                                                  Token.Punctuation                                  <class 'sqlparse.sql.Token'>\n    34. ID                                                 Token.Name                                         <class 'sqlparse.sql.Token'>\n    35. )                                                  Token.Punctuation                                  <class 'sqlparse.sql.Token'>\n    36. )                                                  Token.Punctuation                                  <class 'sqlparse.sql.Token'>\n    37. ;                                                  Token.Punctuation                                  <class 'sqlparse.sql.Token'>\n\n\n### Método para obtener el nombre de la tabla\n\nLas tablas que nos interesa analizar todas tienen siempre la siguiente estructura \n\n```sql\nCREATE TABLE [IF NOT EXISTS] my_table_name ...\n```\n\npor lo que para encontrar el nombre de la tabla necesitamos encontrar el primer token de tipo `Identifier` que encontnró el parser y extraer su valor, como se ve en el siguiente ejemplo:\n\n\n```python\nfor token in statement:\n    if isinstance(token, sqlparse.sql.Identifier):\n        print(token.get_name().upper())\n        break\n```\n\n    MY_TABLE\n\n\n## Extrayendo una lista de tablas y sus nombres\n\nEl volcado SQL puede tener una mezcla de definiciones de estructuras de datos y otros tipos de código SQL, por ejemplo un query de búsqueda\n\n```sql\nCREATE TABLE IF NOT EXISTS MY_TABLE (ID TLLAVE NOT NULL,\n    CONSTRAINT PK_MY_TABLE PRIMARY KEY (ID));\n\nSELECT * FROM ANOTHER_TABLE;\n\nCREATE TABLE IF NOT EXISTS MY_OTHER_TABLE (ID TLLAVE NOT NULL,\n    CONSTRAINT PK_MY_TABLE PRIMARY KEY (ID));\n```\n\nlo que hacemos es utilizar `sqlparse` para encontrar cada statement y determiar si es de tipo `CREATE` de modo que para statements de este tipo aplicamos el algoritmo de la sección anterior para encontrar el nombre de la tabla.\n\n\n```python\nSQLDUMP = \"\"\"CREATE TABLE IF NOT EXISTS MY_TABLE (ID TLLAVE NOT NULL,\n    CONSTRAINT PK_MY_TABLE PRIMARY KEY (ID));\n\nSELECT * FROM ANOTHER_TABLE;\n\nCREATE TABLE IF NOT EXISTS MY_OTHER_TABLE (ID TLLAVE NOT NULL,\n    CONSTRAINT PK_MY_TABLE PRIMARY KEY (ID));\n\"\"\"\n\nparsed = sqlparse.parse(SQLDUMP)\nfor i, statement in enumerate(parsed):\n    print(f\"{i}. {statement.get_type()}\")\n```\n\n    0. CREATE\n    1. SELECT\n    2. CREATE\n\n\n\n```python\ndef get_name(statement: Statement) -> Optional[str]:\n    for token in statement:\n        if isinstance(token, sqlparse.sql.Identifier):\n            return token.value\n    return None \n```\n\n\n```python\nfor i, statement in enumerate(parsed):\n    statement_type = statement.get_type()\n    if statement_type == \"CREATE\":\n        name = get_name(statement)\n        print(f\"{i}. {statement_type}: {name}\")\n```\n\n    0. CREATE: MY_TABLE\n    2. CREATE: MY_OTHER_TABLE\n\n\n### Determinando el tipo de objeto creado\n\n\nEn un caso más general, podemos tener volcados sql con varios tipos de objetos, por ejemplo\n\n```sql\nCREATE TABLE MY_TABLE (ID INTEGER NOT NULL);\n\nCREATE INDEX MY_INDEX ON MY_TABLE(ID);\n```\n\nanalizando los tokens de cada statement es posible determinar el tipo de objeto.\n\n\n```python\nSQL = \"\"\"CREATE TABLE MY_TABLE (ID INTEGER NOT NULL);\n\nSELECT * FROM MY_OTHER_TABLE;\n\nCREATE INDEX MY_INDEX ON MY_TABLE(ID);\n\"\"\"\n\nparsed = sqlparse.parse(SQL)\nstatement = parsed[0]\n\n\n```\n\n\n```python\ntype_found = False \nname_found = False \nfor token in statement:\n    if type_found and name_found:\n        break\n    elif token.ttype is Keyword and not type_found:\n        type_found = True \n        token_type = token.value\n    elif isinstance(token, sqlparse.sql.Identifier) and not name_found:\n        name_found = True \n        token_name = token.value\nprint (f\"tipo: {token_type}, nombre: {token_name}\")\n```\n\n    tipo: TABLE, nombre: MY_TABLE\n\n\nEn el código anterior asumimos que todas las cláusulas son simples, es decir del estilo \"CREATE ....\", si estuvieran agrupadas, por ejemplo \"(CREATE ....)\" el  algoritmo ya no es tan simple, pues debe de realizar el escaneo de manera recursiva, un ejemplo de este tipo de algoritmo se encuentra en el repositorio de `sqlparse`:\n\n[https://github.com/andialbrecht/sqlparse/blob/master/examples/extract_table_names.py](https://github.com/andialbrecht/sqlparse/blob/master/examples/extract_table_names.py)\n\n### Extrayendo el nombre y tipo de objeto creado de un volcado completo\n\n\n```python\nSQL = \"\"\"CREATE TABLE MY_TABLE (ID INTEGER NOT NULL);\n\nSELECT * FROM MY_OTHER_TABLE;\n\nCREATE INDEX MY_INDEX ON MY_TABLE(ID);\n\"\"\"\n\n@dataclass\nclass Metadata:\n    type: str\n    name: str \n    \ndef get_metadata(statement: Statement) -> Metadata:\n    type_found = False \n    name_found = False \n    object_name = None \n    object_type = None \n    for token in statement:\n        if type_found and name_found:\n            break\n        elif token.ttype is Keyword and not type_found:\n            type_found = True \n            object_type = token.value\n        elif isinstance(token, sqlparse.sql.Identifier) and not name_found:\n            name_found = True \n            object_name = token.value\n    return Metadata(name=object_name, type=object_type)\n\n\nparsed = sqlparse.parse(SQL)\n\nfor i, statement in enumerate(parsed):\n    name_found = False \n    if statement.get_type() != \"CREATE\":\n        continue\n    metadata = get_metadata(statement)\n    print(i, metadata)\n```\n\n    0 Metadata(type='TABLE', name='MY_TABLE')\n    2 Metadata(type='INDEX', name='MY_INDEX')\n\n\n## Referencias\n\n1. [https://sqlparse.readthedocs.io/en/latest/](https://sqlparse.readthedocs.io/en/latest/)\n2. [https://github.com/andialbrecht/sqlparse/blob/master/examples/extract_table_names.py](https://github.com/andialbrecht/sqlparse/blob/master/examples/extract_table_names.py)\n\n","n":0.031}}},{"i":21,"$":{"0":{"v":"Projects","n":1},"1":{"v":"\n\n# How to specify cli scripts in a pyproject file\n\n## Using poetry\n\nIf you use poetry, assuming your project is organized as in this example \n\n```toml\n[tool.poetry]\nname = \"packagename\"\nversion = \"0.1.0\"\ndescription = \"\"\nauthors = [\"finswimmer <finswimmer@example.org>\"]\n\n[tool.poetry.scripts]\ncli-script = \"packagename.cli:main\"\n\n[tool.poetry.dependencies]\npython = \"^3.6\"\n\n[tool.poetry.dev-dependencies]\npytest = \"^5.2\"\n\n[build-system]\nrequires = [\"poetry>=1.0\"]\nbuild-backend = \"poetry.masonry.api\"\n```\nSimply call \n\n```sh\npoetry install --only-root\n```\n\nWhere your project should be organized as \n\n```\npackagename\n├── packagename\n│   ├── __init__.py\n│   └── cli.py\n├── tests\n│   ├── __init__.py\n│   └── test_packagename.py\n└── pyproject.toml\n```\n\nAnd the content of the script should resemble this:\n\n```python\n#!/usr/bin/env python\n\ndef main():\n  print(\"Hello world\")\n\nif __name__ == '__main__':\n  main()\n```\n\n---\n\n**Source**: [https://stackoverflow.com/questions/62572961/how-to-organize-a-python-project-with-poetry-for-a-command-line-script](https://stackoverflow.com/questions/62572961/how-to-organize-a-python-project-with-poetry-for-a-command-line-script)\n\n## With setup tools\n\nIf your project is simple, for example like this,\n```\nyourprojectdir/\n    setup.py\n    scripts/\n        myscript.sh\n```\n\nyou may only need to create or append to your `setup.py` the following:\n\n```python\nfrom setuptools import setup\n# you may need setuptools instead of distutils\n\nsetup(\n    scripts = [\n        'scripts/myscript.sh'\n    ]\n)\n```\n\nThen in the shell type\n\n```sh\npython setup.py install\n```\n\n---\n\n**Source:** [https://stackoverflow.com/questions/874521/python-install-script-to-system](https://stackoverflow.com/questions/874521/python-install-script-to-system)\n\n# References\n\n* [Specifying Command Line Scripts In Pyproject Toml](https://stackoverflow.com/questions/63326840/specifying-command-line-scripts-in-pyproject-toml).\n\n* [How To Organize A Python Project With Poetry For A Command Line Script](https://stackoverflow.com/questions/62572961/how-to-organize-a-python-project-with-poetry-for-a-command-line-script).\n\n* [Python install script to system](https://stackoverflow.com/questions/874521/python-install-script-to-system).\n\n* [Poetry Cheatsheet](https://www.yippeecode.com/topics/python-poetry-cheat-sheet/#:~:text=Installing%20all%20dependencies%2C%20but%20not%20the%20project%20itself.,install%20all%20dependencies%20excluding%20the%20ones%20for%20Development.)","n":0.079}}},{"i":22,"$":{"0":{"v":"Recomended tools to build python software","n":0.408},"1":{"v":"\n[How To Use Black Flake8 And Isort To Format Python Codes](http://www.sefidian.com/2021/08/03/how-to-use-black-flake8-and-isort-to-format-python-codes)\n\n","n":0.302}}},{"i":23,"$":{"0":{"v":"Password generator","n":0.707},"1":{"v":"\n### Resultado\n\n<script src=\"https://gist.github.com/renegarcia/2ba8eebc987ee99c2c4ce5ff2ee75081.js\"></script>\n\n\n### Detalles\n\nNecesitamos utilizar los paquetes `string` y `secrets`.\n\n```python\nfrom secrets import choice\nimport string\n```\n\nA continuación definimos el alfabeto y la función generadora.\n\n```python\nALPHABET = string.ascii_letters + string.digits + string.punctuation\n\ndef password_generator(len:int =10, alphabet: list[str] = ALPHABET) -> str:\n    return \"\".join(choice(alphabet) for i in range(len))\n```\n\n\n\n\n\n### Referencias\n\n1. https://docs.python.org/3/library/secrets.html\n\n2. https://gist.github.com/renegarcia/2ba8eebc987ee99c2c4ce5ff2ee75081\n\n","n":0.149}}},{"i":24,"$":{"0":{"v":"Django","n":1},"1":{"v":"\n# Highlight current page in navbar\n\n\n\nYou can get the name of the url (referenced in your urlpatterns). Then set the 'active' class if the url matches.\n\n```python\n{% with url_name=request.resolver_match.url_name %}\n<li class=\"dropdown {% if url_name == 'index' %}active{% endif %}\"\n   <a href=\"{% url 'index' %}\" >Home </a>\n</li>\n<li>...</li>\n{% endwith %}\n```\n\nIn practice it is also useful to prepend the app_name into the path, por example, there\nmight be the `about:index` page and the `home:index` page, which both have the same\n`url_name` as of `Django 4.2`. In order to deal with this case, we also get the app name\nfrom the resolver,\n\n```python\n{% with app_name=request.resolver_match.app_names.0 url_name=request.resolver_match.url_name %}\n<li class=\"dropdown {% if app_name == 'home' and url_name == 'index' %}active{% endif %}\"\n   <a href=\"{% url 'home:index' %}\" >Home </a>\n</li>\n<li>...</li>\n{% endwith %}\n```\n\n\n# References\n\n1. [Django: Highlight current page in navbar](https://stackoverflow.com/questions/39639264/django-highlight-current-page-in-navbar)\n2. [get app name from url in django](https://stackoverflow.com/questions/19261269/get-app-name-from-url-in-django)","n":0.086}}},{"i":25,"$":{"0":{"v":"Best Practices","n":0.707},"1":{"v":"\n# Linters \n\n\nLinters perform static analysis of source codes and check for symantic discrepancies.\nWhen you lint your code, it’s passed through a basic quality checking tool that provides\ninstructions on how eliminate basic syntactic inconsistencies.\n\n\n# Formatters\n\nFormatters are similar tools that tries to restructure your code spacing, line length,\nargument positioning etc to ensure that your code looks consistent across different\nfiles or projects.\n\n\n# References\n\n1. [https://py-vscode.readthedocs.io/en/latest/files/linting.html](https://py-vscode.readthedocs.io/en/latest/files/linting.html)\n","n":0.127}}},{"i":26,"$":{"0":{"v":"How to use Argparse","n":0.5},"1":{"v":"\n\nTo use `argparse` in Python for creating a program that asks for a filename and an output directory, you can follow these steps:\n\n1. Import the `argparse` module:\n\n```python\nimport argparse\n```\n\n2. Create an instance of the `argparse.ArgumentParser` class:\n\n```python\nparser = argparse.ArgumentParser(description='Process input file and output directory.')\n```\n\n3. Define the command-line arguments you want to accept:\n\n```python\nparser.add_argument('filename', help='Input file name')\nparser.add_argument('output_dir', help='Output directory')\n```\n\n4. Parse the command-line arguments:\n\n```python\nargs = parser.parse_args()\n```\n\n5. Access the values of the arguments entered by the user:\n\n```python\nfilename = args.filename\noutput_dir = args.output_dir\n```\n\n6. Use the obtained values in your program as needed.\n\nHere's a complete example that puts it all together:\n\n```python\nimport argparse\n\ndef main():\n    # Step 2: Create an ArgumentParser instance\n    parser = argparse.ArgumentParser(description='Process input file and output directory.')\n    \n    # Step 3: Define command-line arguments\n    parser.add_argument('filename', help='Input file name')\n    parser.add_argument('output_dir', help='Output directory')\n    \n    # Step 4: Parse the command-line arguments\n    args = parser.parse_args()\n    \n    # Step 5: Access the values of the arguments\n    filename = args.filename\n    output_dir = args.output_dir\n    \n    # Step 6: Use the obtained values\n    print(\"Input file:\", filename)\n    print(\"Output directory:\", output_dir)\n\nif __name__ == '__main__':\n    main()\n```\n\nTo run this program from the command line, you would provide the filename and output directory as arguments. For example:\n\n```\n$ python your_program.py input_file.txt /path/to/output/\n```\n\nMake sure to replace \"your_program.py\" with the actual filename of your Python script, \"input_file.txt\" with the desired filename, and \"/path/to/output/\" with the desired output directory.\n\n---\n\n__Respueta generada automáticamente por ChatGPT4__ ","n":0.068}}},{"i":27,"$":{"0":{"v":"Power Shell","n":0.707},"1":{"v":"\n## Add an executable to the Path\n\nTo add an executable to PowerShell's path, you'll need to update the PATH environment variable. Here are the steps:\n\n### Method 1: Using the PATH Environment Variable (Temporary)\n\nYou can update the PATH variable for the current PowerShell session by running:\n\n```powershell\n$env:PATH += \";C:\\Path\\To\\Executable\"\n```\n\nReplace `C:\\Path\\To\\Executable` with the actual path to the executable you want to add.\n\n**Note:** This change is only temporary and will be lost when you close the PowerShell session.\n\n### Method 3: Using a PowerShell Profile\n\nYou can also update the PATH variable by adding a line to your PowerShell profile. This method is useful if you want to keep your environment variables separate from your system settings.\n\n1. Open your PowerShell profile file (usually located at `C:\\Users\\<YourUsername>\\Documents\\WindowsPowerShell\\profile.ps1`).\n2. Add the following line:\n\n    ```powershell\n    $env:PATH += \";C:\\Path\\To\\Executable\"\n    ```\n\n3. Save the file and restart PowerShell.\n\n### Source\n\n1. <https://www.blackbox.ai/share/b06ec1df-08af-4e70-bbbe-dcaecaec87f8>\n","n":0.085}}},{"i":28,"$":{"0":{"v":"Julia","n":1},"1":{"v":"\n## How to change the location of the default installation package for julia\n\nFor the Julia packages there is one system variable that controls everything.\nIt is named `JULIA_DEPOT_PATH`.\n\nIn case of Windows you could set it to something like the following in\n[[code.power-shell]]:\n\n```powershell\n$env:JULIA_DEPOT_PATH = \"C:\\path\\to\\my_julia_depo_folder\"\n```\n\n### Source\n\n* <https://stackoverflow.com/questions/76072461/how-to-change-the-location-of-the-default-installation-package-for-julia-1-8-5>\n","n":0.151}}}]}
