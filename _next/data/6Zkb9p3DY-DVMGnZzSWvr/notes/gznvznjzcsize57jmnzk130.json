{"pageProps":{"note":{"id":"gznvznjzcsize57jmnzk130","title":"How to use Argparse","desc":"","updated":1685387842919,"created":1685387710591,"custom":{},"fname":"code.python.argparse","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"9b12efb2ef1955529fe1f30b6a5d77ff","links":[],"anchors":{},"children":[],"parent":"hwyvw05ski3srgkxy31ym7w","data":{}},"body":"<h1 id=\"how-to-use-argparse\">How to use Argparse<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#how-to-use-argparse\"></a></h1>\n<p>To use <code>argparse</code> in Python for creating a program that asks for a filename and an output directory, you can follow these steps:</p>\n<ol>\n<li>Import the <code>argparse</code> module:</li>\n</ol>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> argparse\n</code></pre>\n<ol start=\"2\">\n<li>Create an instance of the <code>argparse.ArgumentParser</code> class:</li>\n</ol>\n<pre class=\"language-python\"><code class=\"language-python\">parser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span>description<span class=\"token operator\">=</span><span class=\"token string\">'Process input file and output directory.'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ol start=\"3\">\n<li>Define the command-line arguments you want to accept:</li>\n</ol>\n<pre class=\"language-python\"><code class=\"language-python\">parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'filename'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'Input file name'</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'output_dir'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'Output directory'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ol start=\"4\">\n<li>Parse the command-line arguments:</li>\n</ol>\n<pre class=\"language-python\"><code class=\"language-python\">args <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ol start=\"5\">\n<li>Access the values of the arguments entered by the user:</li>\n</ol>\n<pre class=\"language-python\"><code class=\"language-python\">filename <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>filename\noutput_dir <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>output_dir\n</code></pre>\n<ol start=\"6\">\n<li>Use the obtained values in your program as needed.</li>\n</ol>\n<p>Here's a complete example that puts it all together:</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> argparse\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># Step 2: Create an ArgumentParser instance</span>\n    parser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span>description<span class=\"token operator\">=</span><span class=\"token string\">'Process input file and output directory.'</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># Step 3: Define command-line arguments</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'filename'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'Input file name'</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'output_dir'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'Output directory'</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># Step 4: Parse the command-line arguments</span>\n    args <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># Step 5: Access the values of the arguments</span>\n    filename <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>filename\n    output_dir <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>output_dir\n    \n    <span class=\"token comment\"># Step 6: Use the obtained values</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Input file:\"</span><span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Output directory:\"</span><span class=\"token punctuation\">,</span> output_dir<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>To run this program from the command line, you would provide the filename and output directory as arguments. For example:</p>\n<pre><code>$ python your_program.py input_file.txt /path/to/output/\n</code></pre>\n<p>Make sure to replace \"your_program.py\" with the actual filename of your Python script, \"input_file.txt\" with the desired filename, and \"/path/to/output/\" with the desired output directory.</p>\n<hr>\n<p><strong>Respueta generada autom√°ticamente por ChatGPT4</strong> </p>","noteIndex":{"id":"root","title":"Inicio","desc":"","updated":1737734545982,"created":1595961348801,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"29eefcfb54e9325926e3bd85ed2ed09f","links":[],"anchors":{},"children":["631hw9oh0k8jhc0wlm0joyz","rzreoc67l24hzknyqbn3a9b"],"parent":null,"data":{},"body":"\nWelcome to my notes space, this site is a collection of disorganized notes related to my work. Feel free to explore, if you find any of this, useful simply copy/paste or share. \n\nHave fun,\n\nIsra.\n\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"dependencies/github.com/renegarcia/eleventa-db","remote":{"type":"git","url":"git@github.com:renegarcia/eleventa-db.git"},"selfContained":true,"name":"eleventa-db"},{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Notes","description":"Personal Knowledge Space or Rene Garcia"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","enableHierarchyDisplay":true,"hierarchyDisplayTitle":"Children","duplicateNoteBehavior":{"action":"useVault","payload":["eleventa-db","Dendron"]},"siteUrl":"https://renegarcia.github.io","assetsPrefix":"/dendron","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}